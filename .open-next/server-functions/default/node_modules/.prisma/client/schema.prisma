generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Bookings_dev {
  id                                                       String                                       @id @db.Uuid
  status                                                   String                                       @default("draft") @db.VarChar(255)
  sort                                                     Int?
  user_created                                             String?                                      @db.Uuid
  date_created                                             DateTime?                                    @db.Timestamptz(6)
  user_updated                                             String?                                      @db.Uuid
  date_updated                                             DateTime?                                    @db.Timestamptz(6)
  whatsapp_number                                          String?                                      @db.Uuid
  prasad_delivery_needed                                   Boolean                                      @default(false)
  status_history                                           Json?                                        @db.Json
  email                                                    String?                                      @db.VarChar(255)
  priest_note                                              String?
  dhakshina_amount                                         String?                                      @db.VarChar(255)
  Total_Amount                                             Float?                                       @db.Real
  booking_mode                                             String?                                      @db.VarChar(255)
  payment_mode                                             String?                                      @db.VarChar(255)
  onboarded_temple_name                                    String?                                      @db.Uuid
  session_token                                            String?                                      @db.VarChar(255)
  invoice_number                                           String?                                      @db.VarChar(255)
  is_testing_purpose                                       Boolean                                      @default(false)
  net_booking_amount                                       Float?                                       @db.Real
  contact_number                                           String?                                      @db.VarChar(255)
  Temple_Onboarding                                        Temple_Onboarding?                           @relation(fields: [onboarded_temple_name], references: [id], onUpdate: NoAction, map: "bookings_dev_onboarded_temple_name_foreign")
  directus_users_Bookings_dev_user_createdTodirectus_users directus_users?                              @relation("Bookings_dev_user_createdTodirectus_users", fields: [user_created], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "bookings_dev_user_created_foreign")
  directus_users_Bookings_dev_user_updatedTodirectus_users directus_users?                              @relation("Bookings_dev_user_updatedTodirectus_users", fields: [user_updated], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "bookings_dev_user_updated_foreign")
  Whatsapp_users_dev                                       Whatsapp_users_dev?                          @relation(fields: [whatsapp_number], references: [id], onUpdate: NoAction, map: "bookings_dev_whatsapp_number_foreign")
  Master_payment_table                                     Master_payment_table?
  master_booked_puja_calendar                              master_booked_puja_calendar[]
  master_booked_puja_list                                  master_booked_puja_list[]
  master_booking_confirmed_puja_participants               master_booking_confirmed_puja_participants[]
  master_convenience_fee_table                             master_convenience_fee_table?
  master_invoice_list                                      master_invoice_list?
  master_puja_prasad_delivery_details                      master_puja_prasad_delivery_details?
  master_reserved_puja_list                                master_reserved_puja_list[]
  master_temple_staff_list_Bookings_dev                    master_temple_staff_list_Bookings_dev[]
  master_temple_staff_list_Bookings_dev_1                  master_temple_staff_list_Bookings_dev_1[]
  user_feedbacks                                           user_feedbacks[]
}

model Master_payment_table {
  id                                                               String                        @id @db.Uuid
  sort                                                             Int?
  user_created                                                     String?                       @db.Uuid
  date_created                                                     DateTime?                     @db.Timestamptz(6)
  user_updated                                                     String?                       @db.Uuid
  date_updated                                                     DateTime?                     @db.Timestamptz(6)
  payement_gateway_name                                            String?                       @db.VarChar(255)
  order_id                                                         String?                       @db.VarChar(255)
  booking_id                                                       String?                       @unique(map: "master_payment_table_booking_id_unique") @db.Uuid
  currency                                                         String?                       @db.VarChar(255)
  payment_gatway_id                                                String?                       @db.VarChar(255)
  payment_status                                                   String?                       @db.VarChar(255)
  payment_message                                                  String?
  payment_time                                                     String?                       @db.VarChar(255)
  bank_reference_id                                                String?                       @db.VarChar(255)
  payment_mode                                                     String?                       @db.VarChar(255)
  payment_groups                                                   String?                       @db.VarChar(255)
  settlement_amount                                                String?                       @db.VarChar(255)
  upi_id                                                           String?                       @db.VarChar(255)
  entire_webhook                                                   Json?                         @db.Json
  Bookings_dev                                                     Bookings_dev?                 @relation(fields: [booking_id], references: [id], onUpdate: NoAction, map: "master_payment_table_booking_id_foreign")
  directus_users_Master_payment_table_user_createdTodirectus_users directus_users?               @relation("Master_payment_table_user_createdTodirectus_users", fields: [user_created], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "master_payment_table_user_created_foreign")
  directus_users_Master_payment_table_user_updatedTodirectus_users directus_users?               @relation("Master_payment_table_user_updatedTodirectus_users", fields: [user_updated], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "master_payment_table_user_updated_foreign")
  master_convenience_fee_table                                     master_convenience_fee_table?
}

model Page {
  id                   Int                    @id @default(autoincrement())
  title                String?                @db.VarChar(255)
  permalink            String?                @db.VarChar(255)
  status               String?                @db.VarChar(255)
  published_at         DateTime?              @db.Timestamp(6)
  description          String?
  Page_meta_m2a_button Page_meta_m2a_button[]
  block_hero           block_hero[]
}

model Page_meta_m2a_button {
  id         Int     @id @default(autoincrement())
  Page_id    Int?
  item       String? @db.VarChar(255)
  collection String? @db.VarChar(255)
  Page       Page?   @relation(fields: [Page_id], references: [id], onUpdate: NoAction, map: "page_meta_m2a_button_page_id_foreign")
}

model Pages {
  id                                                Int             @id @default(autoincrement())
  status                                            String          @default("draft") @db.VarChar(255)
  sort                                              Int?
  user_created                                      String?         @db.Uuid
  date_created                                      DateTime?       @db.Timestamptz(6)
  user_updated                                      String?         @db.Uuid
  date_updated                                      DateTime?       @db.Timestamptz(6)
  Title                                             String?         @db.VarChar(255)
  params                                            String?         @db.VarChar(255)
  Content                                           String?         @db.VarChar(255)
  directus_users_Pages_user_createdTodirectus_users directus_users? @relation("Pages_user_createdTodirectus_users", fields: [user_created], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "pages_user_created_foreign")
  directus_users_Pages_user_updatedTodirectus_users directus_users? @relation("Pages_user_updatedTodirectus_users", fields: [user_updated], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "pages_user_updated_foreign")
  Pages_blocks                                      Pages_blocks[]
}

model Sessions_dev {
  id                 String              @id @db.Uuid
  date_created       DateTime?           @db.Timestamptz(6)
  date_updated       DateTime?           @db.Timestamptz(6)
  token              String?             @unique(map: "sessions_dev_token_unique") @db.VarChar(255)
  number             String?             @db.Uuid
  is_permanent       Boolean?            @default(false)
  city_name          String?             @db.VarChar(255)
  region_name        String?             @db.VarChar(255)
  country_name       String?             @db.VarChar(255)
  incoming_messages  Json?               @db.Json
  Whatsapp_users_dev Whatsapp_users_dev? @relation(fields: [number], references: [id], onUpdate: NoAction, map: "sessions_dev_number_foreign")
}

model Telegram_Topic {
  id       Int     @id @default(autoincrement())
  wa_id    String? @db.Uuid
  topic_id String? @db.Uuid
  name     String? @db.VarChar(255)
}

model Temple_Onboarding {
  id                                                            String                                       @id @db.Uuid
  sort                                                          Int?
  user_created                                                  String?                                      @db.Uuid
  date_created                                                  DateTime?                                    @db.Timestamptz(6)
  user_updated                                                  String?                                      @db.Uuid
  date_updated                                                  DateTime?                                    @db.Timestamptz(6)
  Temple_Name                                                   String?                                      @db.VarChar(255)
  Place                                                         String?                                      @db.VarChar(255)
  District                                                      String?                                      @default("Palakkad") @db.VarChar(255)
  State                                                         String?                                      @default("Kerala") @db.VarChar(255)
  Point_of_Contact_1                                            String?                                      @db.VarChar(255)
  Point_Of_Contact_2                                            String?                                      @db.VarChar(255)
  Contact_Number_1                                              BigInt?
  Temple_Official_Whatsapp_Number                               BigInt?
  Temple_Official_email_Address                                 String?                                      @db.VarChar(255)
  Contact_Number_2                                              BigInt?
  Temple_Website                                                String?                                      @db.VarChar(255)
  Other_Deities                                                 Json?                                        @db.Json
  Account_Number                                                String?                                      @db.VarChar(255)
  IFSC                                                          String?                                      @db.VarChar(255)
  UPI_ID                                                        String?                                      @db.VarChar(255)
  Dakshina                                                      Boolean?                                     @default(false)
  Priest_Note_Language                                          Json?                                        @db.Json
  GST_Number                                                    String?                                      @db.VarChar(255)
  puja_booking_cutoff_time                                      DateTime?                                    @db.Time(6)
  Account_Name                                                  String?                                      @db.VarChar(255)
  slug                                                          String?                                      @db.VarChar(255)
  Primary_Deity                                                 String?                                      @db.VarChar(255)
  is_prasad_delivery_available                                  Boolean                                      @default(false)
  Joint_holder1_name                                            String?                                      @db.VarChar(255)
  Joint_holder2_name                                            String?                                      @db.VarChar(255)
  Bookings_dev                                                  Bookings_dev[]
  directus_users_Temple_Onboarding_user_createdTodirectus_users directus_users?                              @relation("Temple_Onboarding_user_createdTodirectus_users", fields: [user_created], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "temple_onboarding_user_created_foreign")
  directus_users_Temple_Onboarding_user_updatedTodirectus_users directus_users?                              @relation("Temple_Onboarding_user_updatedTodirectus_users", fields: [user_updated], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "temple_onboarding_user_updated_foreign")
  Temple_Onboarding_files                                       Temple_Onboarding_files[]
  Temple_Onboarding_files_1                                     Temple_Onboarding_files_1[]
  master_puja_list                                              master_puja_list[]
  master_reserved_puja_list                                     master_reserved_puja_list[]
  master_subscription_details                                   master_subscription_details?
  master_temple_staff_list_Temple_Onboarding                    master_temple_staff_list_Temple_Onboarding[]
}

model Temple_Onboarding_files {
  id                   Int                @id @default(autoincrement())
  Temple_Onboarding_id String?            @db.Uuid
  directus_files_id    String?            @db.Uuid
  directus_files       directus_files?    @relation(fields: [directus_files_id], references: [id], onUpdate: NoAction, map: "temple_onboarding_files_directus_files_id_foreign")
  Temple_Onboarding    Temple_Onboarding? @relation(fields: [Temple_Onboarding_id], references: [id], onUpdate: NoAction, map: "temple_onboarding_files_temple_onboarding_id_foreign")
}

model Temple_Onboarding_files_1 {
  id                   Int                @id @default(autoincrement())
  Temple_Onboarding_id String?            @db.Uuid
  directus_files_id    String?            @db.Uuid
  directus_files       directus_files?    @relation(fields: [directus_files_id], references: [id], onUpdate: NoAction, map: "temple_onboarding_files_1_directus_files_id_foreign")
  Temple_Onboarding    Temple_Onboarding? @relation(fields: [Temple_Onboarding_id], references: [id], onUpdate: NoAction, map: "temple_onboarding_files_1_temple_onboarding_id_foreign")
}

model Website_CMS {
  id                                                      Int             @id @default(autoincrement())
  status                                                  String          @default("draft") @db.VarChar(255)
  user_created                                            String?         @db.Uuid
  date_created                                            DateTime?       @db.Timestamptz(6)
  user_updated                                            String?         @db.Uuid
  date_updated                                            DateTime?       @db.Timestamptz(6)
  directus_users_Website_CMS_user_createdTodirectus_users directus_users? @relation("Website_CMS_user_createdTodirectus_users", fields: [user_created], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "website_cms_user_created_foreign")
  directus_users_Website_CMS_user_updatedTodirectus_users directus_users? @relation("Website_CMS_user_updatedTodirectus_users", fields: [user_updated], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "website_cms_user_updated_foreign")
}

model Whatsapp_users_dev {
  id                                                             String           @id @db.Uuid
  user_created                                                   String?          @db.Uuid
  date_created                                                   DateTime?        @db.Timestamptz(6)
  user_updated                                                   String?          @db.Uuid
  date_updated                                                   DateTime?        @db.Timestamptz(6)
  whatsapp_number                                                BigInt           @unique(map: "whatsapp_users_dev_whatsapp_number_unique")
  language_chosen                                                String?          @default("english") @db.VarChar(255)
  email                                                          String?          @db.VarChar(255)
  name                                                           String?          @db.VarChar(255)
  incoming_messages                                              Json?            @db.Json
  Bookings_dev                                                   Bookings_dev[]
  Sessions_dev                                                   Sessions_dev[]
  directus_users_Whatsapp_users_dev_user_createdTodirectus_users directus_users?  @relation("Whatsapp_users_dev_user_createdTodirectus_users", fields: [user_created], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "whatsapp_users_dev_user_created_foreign")
  directus_users_Whatsapp_users_dev_user_updatedTodirectus_users directus_users?  @relation("Whatsapp_users_dev_user_updatedTodirectus_users", fields: [user_updated], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "whatsapp_users_dev_user_updated_foreign")
  user_feedbacks                                                 user_feedbacks[]
}

model block_button {
  id Int @id @default(autoincrement())
}

model block_button_group {
  id Int @id @default(autoincrement())
}

model block_form {
  id Int @id @default(autoincrement())
}

model block_gallery {
  id Int @id @default(autoincrement())
}

model block_gallery_items {
  id Int @id @default(autoincrement())
}

model block_hero {
  id           Int     @id @default(autoincrement())
  tagline      String? @db.VarChar(255)
  headline     String? @db.VarChar(255)
  description  String?
  button_group Int?
  Page         Page?   @relation(fields: [button_group], references: [id], onUpdate: NoAction, map: "block_hero_button_group_foreign")
}

model block_posts {
  id Int @id @default(autoincrement())
}

model block_pricing {
  id Int @id @default(autoincrement())
}

model block_pricing_card {
  id Int @id @default(autoincrement())
}

model block_richtext {
  id Int @id @default(autoincrement())
}

model directus_access {
  id                String            @id @db.Uuid
  role              String?           @db.Uuid
  user              String?           @db.Uuid
  policy            String            @db.Uuid
  sort              Int?
  directus_policies directus_policies @relation(fields: [policy], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "directus_access_policy_foreign")
  directus_roles    directus_roles?   @relation(fields: [role], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "directus_access_role_foreign")
  directus_users    directus_users?   @relation(fields: [user], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "directus_access_user_foreign")
}

model directus_activity {
  id                 Int                  @id @default(autoincrement())
  action             String               @db.VarChar(45)
  user               String?              @db.Uuid
  timestamp          DateTime             @default(now()) @db.Timestamptz(6)
  ip                 String?              @db.VarChar(50)
  user_agent         String?
  collection         String               @db.VarChar(64)
  item               String               @db.VarChar(255)
  comment            String?
  origin             String?              @db.VarChar(255)
  directus_revisions directus_revisions[]
}

model directus_collections {
  collection                 String                 @id @db.VarChar(64)
  icon                       String?                @db.VarChar(64)
  note                       String?
  display_template           String?                @db.VarChar(255)
  hidden                     Boolean                @default(false)
  singleton                  Boolean                @default(false)
  translations               Json?                  @db.Json
  archive_field              String?                @db.VarChar(64)
  archive_app_filter         Boolean                @default(true)
  archive_value              String?                @db.VarChar(255)
  unarchive_value            String?                @db.VarChar(255)
  sort_field                 String?                @db.VarChar(64)
  accountability             String?                @default("all") @db.VarChar(255)
  color                      String?                @db.VarChar(255)
  item_duplication_fields    Json?                  @db.Json
  sort                       Int?
  group                      String?                @db.VarChar(64)
  collapse                   String                 @default("open") @db.VarChar(255)
  preview_url                String?                @db.VarChar(255)
  versioning                 Boolean                @default(false)
  directus_collections       directus_collections?  @relation("directus_collectionsTodirectus_collections", fields: [group], references: [collection], onDelete: NoAction, onUpdate: NoAction, map: "directus_collections_group_foreign")
  other_directus_collections directus_collections[] @relation("directus_collectionsTodirectus_collections")
  directus_shares            directus_shares[]
  directus_versions          directus_versions[]
}

model directus_dashboards {
  id              String            @id @db.Uuid
  name            String            @db.VarChar(255)
  icon            String            @default("dashboard") @db.VarChar(64)
  note            String?
  date_created    DateTime?         @default(now()) @db.Timestamptz(6)
  user_created    String?           @db.Uuid
  color           String?           @db.VarChar(255)
  directus_users  directus_users?   @relation(fields: [user_created], references: [id], onUpdate: NoAction, map: "directus_dashboards_user_created_foreign")
  directus_panels directus_panels[]
}

model directus_extensions {
  enabled Boolean @default(true)
  id      String  @id @db.Uuid
  folder  String  @db.VarChar(255)
  source  String  @db.VarChar(255)
  bundle  String? @db.Uuid
}

model directus_fields {
  id                 Int      @id @default(autoincrement())
  collection         String   @db.VarChar(64)
  field              String   @db.VarChar(64)
  special            String?  @db.VarChar(64)
  interface          String?  @db.VarChar(64)
  options            Json?    @db.Json
  display            String?  @db.VarChar(64)
  display_options    Json?    @db.Json
  readonly           Boolean  @default(false)
  hidden             Boolean  @default(false)
  sort               Int?
  width              String?  @default("full") @db.VarChar(30)
  translations       Json?    @db.Json
  note               String?
  conditions         Json?    @db.Json
  required           Boolean? @default(false)
  group              String?  @db.VarChar(64)
  validation         Json?    @db.Json
  validation_message String?
}

model directus_files {
  id                                                                    String                      @id @db.Uuid
  storage                                                               String                      @db.VarChar(255)
  filename_disk                                                         String?                     @db.VarChar(255)
  filename_download                                                     String                      @db.VarChar(255)
  title                                                                 String?                     @db.VarChar(255)
  type                                                                  String?                     @db.VarChar(255)
  folder                                                                String?                     @db.Uuid
  uploaded_by                                                           String?                     @db.Uuid
  created_on                                                            DateTime                    @default(now()) @db.Timestamptz(6)
  modified_by                                                           String?                     @db.Uuid
  modified_on                                                           DateTime                    @default(now()) @db.Timestamptz(6)
  charset                                                               String?                     @db.VarChar(50)
  filesize                                                              BigInt?
  width                                                                 Int?
  height                                                                Int?
  duration                                                              Int?
  embed                                                                 String?                     @db.VarChar(200)
  description                                                           String?
  location                                                              String?
  tags                                                                  String?
  metadata                                                              Json?                       @db.Json
  focal_point_x                                                         Int?
  focal_point_y                                                         Int?
  tus_id                                                                String?                     @db.VarChar(64)
  tus_data                                                              Json?                       @db.Json
  uploaded_on                                                           DateTime?                   @db.Timestamptz(6)
  Temple_Onboarding_files                                               Temple_Onboarding_files[]
  Temple_Onboarding_files_1                                             Temple_Onboarding_files_1[]
  directus_folders                                                      directus_folders?           @relation(fields: [folder], references: [id], onUpdate: NoAction, map: "directus_files_folder_foreign")
  directus_users_directus_files_modified_byTodirectus_users             directus_users?             @relation("directus_files_modified_byTodirectus_users", fields: [modified_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "directus_files_modified_by_foreign")
  directus_users_directus_files_uploaded_byTodirectus_users             directus_users?             @relation("directus_files_uploaded_byTodirectus_users", fields: [uploaded_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "directus_files_uploaded_by_foreign")
  directus_settings_directus_settings_project_logoTodirectus_files      directus_settings[]         @relation("directus_settings_project_logoTodirectus_files")
  directus_settings_directus_settings_public_backgroundTodirectus_files directus_settings[]         @relation("directus_settings_public_backgroundTodirectus_files")
  directus_settings_directus_settings_public_faviconTodirectus_files    directus_settings[]         @relation("directus_settings_public_faviconTodirectus_files")
  directus_settings_directus_settings_public_foregroundTodirectus_files directus_settings[]         @relation("directus_settings_public_foregroundTodirectus_files")
  master_puja_list                                                      master_puja_list[]
}

model directus_flows {
  id                  String                @id @db.Uuid
  name                String                @db.VarChar(255)
  icon                String?               @db.VarChar(64)
  color               String?               @db.VarChar(255)
  description         String?
  status              String                @default("active") @db.VarChar(255)
  trigger             String?               @db.VarChar(255)
  accountability      String?               @default("all") @db.VarChar(255)
  options             Json?                 @db.Json
  operation           String?               @unique(map: "directus_flows_operation_unique") @db.Uuid
  date_created        DateTime?             @default(now()) @db.Timestamptz(6)
  user_created        String?               @db.Uuid
  directus_users      directus_users?       @relation(fields: [user_created], references: [id], onUpdate: NoAction, map: "directus_flows_user_created_foreign")
  directus_operations directus_operations[]
  directus_webhooks   directus_webhooks[]
}

model directus_folders {
  id                     String              @id @db.Uuid
  name                   String              @db.VarChar(255)
  parent                 String?             @db.Uuid
  directus_files         directus_files[]
  directus_folders       directus_folders?   @relation("directus_foldersTodirectus_folders", fields: [parent], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "directus_folders_parent_foreign")
  other_directus_folders directus_folders[]  @relation("directus_foldersTodirectus_folders")
  directus_settings      directus_settings[]
}

model directus_migrations {
  version   String    @id @db.VarChar(255)
  name      String    @db.VarChar(255)
  timestamp DateTime? @default(now()) @db.Timestamptz(6)
}

model directus_notifications {
  id                                                              Int             @id @default(autoincrement())
  timestamp                                                       DateTime?       @default(now()) @db.Timestamptz(6)
  status                                                          String?         @default("inbox") @db.VarChar(255)
  recipient                                                       String          @db.Uuid
  sender                                                          String?         @db.Uuid
  subject                                                         String          @db.VarChar(255)
  message                                                         String?
  collection                                                      String?         @db.VarChar(64)
  item                                                            String?         @db.VarChar(255)
  directus_users_directus_notifications_recipientTodirectus_users directus_users  @relation("directus_notifications_recipientTodirectus_users", fields: [recipient], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "directus_notifications_recipient_foreign")
  directus_users_directus_notifications_senderTodirectus_users    directus_users? @relation("directus_notifications_senderTodirectus_users", fields: [sender], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "directus_notifications_sender_foreign")
}

model directus_operations {
  id                                                                         String               @id @db.Uuid
  name                                                                       String?              @db.VarChar(255)
  key                                                                        String               @db.VarChar(255)
  type                                                                       String               @db.VarChar(255)
  position_x                                                                 Int
  position_y                                                                 Int
  options                                                                    Json?                @db.Json
  resolve                                                                    String?              @unique(map: "directus_operations_resolve_unique") @db.Uuid
  reject                                                                     String?              @unique(map: "directus_operations_reject_unique") @db.Uuid
  flow                                                                       String               @db.Uuid
  date_created                                                               DateTime?            @default(now()) @db.Timestamptz(6)
  user_created                                                               String?              @db.Uuid
  directus_flows                                                             directus_flows       @relation(fields: [flow], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "directus_operations_flow_foreign")
  directus_operations_directus_operations_rejectTodirectus_operations        directus_operations? @relation("directus_operations_rejectTodirectus_operations", fields: [reject], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "directus_operations_reject_foreign")
  other_directus_operations_directus_operations_rejectTodirectus_operations  directus_operations? @relation("directus_operations_rejectTodirectus_operations")
  directus_operations_directus_operations_resolveTodirectus_operations       directus_operations? @relation("directus_operations_resolveTodirectus_operations", fields: [resolve], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "directus_operations_resolve_foreign")
  other_directus_operations_directus_operations_resolveTodirectus_operations directus_operations? @relation("directus_operations_resolveTodirectus_operations")
  directus_users                                                             directus_users?      @relation(fields: [user_created], references: [id], onUpdate: NoAction, map: "directus_operations_user_created_foreign")
}

model directus_panels {
  id                  String              @id @db.Uuid
  dashboard           String              @db.Uuid
  name                String?             @db.VarChar(255)
  icon                String?             @db.VarChar(64)
  color               String?             @db.VarChar(10)
  show_header         Boolean             @default(false)
  note                String?
  type                String              @db.VarChar(255)
  position_x          Int
  position_y          Int
  width               Int
  height              Int
  options             Json?               @db.Json
  date_created        DateTime?           @default(now()) @db.Timestamptz(6)
  user_created        String?             @db.Uuid
  directus_dashboards directus_dashboards @relation(fields: [dashboard], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "directus_panels_dashboard_foreign")
  directus_users      directus_users?     @relation(fields: [user_created], references: [id], onUpdate: NoAction, map: "directus_panels_user_created_foreign")
}

model directus_permissions {
  id                Int               @id @default(autoincrement())
  collection        String            @db.VarChar(64)
  action            String            @db.VarChar(10)
  permissions       Json?             @db.Json
  validation        Json?             @db.Json
  presets           Json?             @db.Json
  fields            String?
  policy            String            @db.Uuid
  directus_policies directus_policies @relation(fields: [policy], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "directus_permissions_policy_foreign")
}

model directus_policies {
  id                   String                 @id @db.Uuid
  name                 String                 @db.VarChar(100)
  icon                 String                 @default("badge") @db.VarChar(64)
  description          String?
  ip_access            String?
  enforce_tfa          Boolean                @default(false)
  admin_access         Boolean                @default(false)
  app_access           Boolean                @default(false)
  directus_access      directus_access[]
  directus_permissions directus_permissions[]
}

model directus_presets {
  id               Int             @id @default(autoincrement())
  bookmark         String?         @db.VarChar(255)
  user             String?         @db.Uuid
  role             String?         @db.Uuid
  collection       String?         @db.VarChar(64)
  search           String?         @db.VarChar(100)
  layout           String?         @default("tabular") @db.VarChar(100)
  layout_query     Json?           @db.Json
  layout_options   Json?           @db.Json
  refresh_interval Int?
  filter           Json?           @db.Json
  icon             String?         @default("bookmark") @db.VarChar(64)
  color            String?         @db.VarChar(255)
  directus_roles   directus_roles? @relation(fields: [role], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "directus_presets_role_foreign")
  directus_users   directus_users? @relation(fields: [user], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "directus_presets_user_foreign")
}

model directus_relations {
  id                      Int     @id @default(autoincrement())
  many_collection         String  @db.VarChar(64)
  many_field              String  @db.VarChar(64)
  one_collection          String? @db.VarChar(64)
  one_field               String? @db.VarChar(64)
  one_collection_field    String? @db.VarChar(64)
  one_allowed_collections String?
  junction_field          String? @db.VarChar(64)
  sort_field              String? @db.VarChar(64)
  one_deselect_action     String  @default("nullify") @db.VarChar(255)
}

model directus_revisions {
  id                       Int                  @id @default(autoincrement())
  activity                 Int
  collection               String               @db.VarChar(64)
  item                     String               @db.VarChar(255)
  data                     Json?                @db.Json
  delta                    Json?                @db.Json
  parent                   Int?
  version                  String?              @db.Uuid
  directus_activity        directus_activity    @relation(fields: [activity], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "directus_revisions_activity_foreign")
  directus_revisions       directus_revisions?  @relation("directus_revisionsTodirectus_revisions", fields: [parent], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "directus_revisions_parent_foreign")
  other_directus_revisions directus_revisions[] @relation("directus_revisionsTodirectus_revisions")
  directus_versions        directus_versions?   @relation(fields: [version], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "directus_revisions_version_foreign")
}

model directus_roles {
  id                   String              @id @db.Uuid
  name                 String              @db.VarChar(100)
  icon                 String              @default("supervised_user_circle") @db.VarChar(64)
  description          String?
  parent               String?             @db.Uuid
  directus_access      directus_access[]
  directus_presets     directus_presets[]
  directus_roles       directus_roles?     @relation("directus_rolesTodirectus_roles", fields: [parent], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "directus_roles_parent_foreign")
  other_directus_roles directus_roles[]    @relation("directus_rolesTodirectus_roles")
  directus_settings    directus_settings[]
  directus_shares      directus_shares[]
  directus_users       directus_users[]
}

model directus_sessions {
  token           String           @id @db.VarChar(64)
  user            String?          @db.Uuid
  expires         DateTime         @db.Timestamptz(6)
  ip              String?          @db.VarChar(255)
  user_agent      String?
  share           String?          @db.Uuid
  origin          String?          @db.VarChar(255)
  next_token      String?          @db.VarChar(64)
  directus_shares directus_shares? @relation(fields: [share], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "directus_sessions_share_foreign")
  directus_users  directus_users?  @relation(fields: [user], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "directus_sessions_user_foreign")
}

model directus_settings {
  id                                                                 Int               @id @default(autoincrement())
  project_name                                                       String            @default("Directus") @db.VarChar(100)
  project_url                                                        String?           @db.VarChar(255)
  project_color                                                      String            @default("#6644FF") @db.VarChar(255)
  project_logo                                                       String?           @db.Uuid
  public_foreground                                                  String?           @db.Uuid
  public_background                                                  String?           @db.Uuid
  public_note                                                        String?
  auth_login_attempts                                                Int?              @default(25)
  auth_password_policy                                               String?           @db.VarChar(100)
  storage_asset_transform                                            String?           @default("all") @db.VarChar(7)
  storage_asset_presets                                              Json?             @db.Json
  custom_css                                                         String?
  storage_default_folder                                             String?           @db.Uuid
  basemaps                                                           Json?             @db.Json
  mapbox_key                                                         String?           @db.VarChar(255)
  module_bar                                                         Json?             @db.Json
  project_descriptor                                                 String?           @db.VarChar(100)
  default_language                                                   String            @default("en-US") @db.VarChar(255)
  custom_aspect_ratios                                               Json?             @db.Json
  public_favicon                                                     String?           @db.Uuid
  default_appearance                                                 String            @default("auto") @db.VarChar(255)
  default_theme_light                                                String?           @db.VarChar(255)
  theme_light_overrides                                              Json?             @db.Json
  default_theme_dark                                                 String?           @db.VarChar(255)
  theme_dark_overrides                                               Json?             @db.Json
  report_error_url                                                   String?           @db.VarChar(255)
  report_bug_url                                                     String?           @db.VarChar(255)
  report_feature_url                                                 String?           @db.VarChar(255)
  public_registration                                                Boolean           @default(false)
  public_registration_verify_email                                   Boolean           @default(true)
  public_registration_role                                           String?           @db.Uuid
  public_registration_email_filter                                   Json?             @db.Json
  directus_files_directus_settings_project_logoTodirectus_files      directus_files?   @relation("directus_settings_project_logoTodirectus_files", fields: [project_logo], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "directus_settings_project_logo_foreign")
  directus_files_directus_settings_public_backgroundTodirectus_files directus_files?   @relation("directus_settings_public_backgroundTodirectus_files", fields: [public_background], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "directus_settings_public_background_foreign")
  directus_files_directus_settings_public_faviconTodirectus_files    directus_files?   @relation("directus_settings_public_faviconTodirectus_files", fields: [public_favicon], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "directus_settings_public_favicon_foreign")
  directus_files_directus_settings_public_foregroundTodirectus_files directus_files?   @relation("directus_settings_public_foregroundTodirectus_files", fields: [public_foreground], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "directus_settings_public_foreground_foreign")
  directus_roles                                                     directus_roles?   @relation(fields: [public_registration_role], references: [id], onUpdate: NoAction, map: "directus_settings_public_registration_role_foreign")
  directus_folders                                                   directus_folders? @relation(fields: [storage_default_folder], references: [id], onUpdate: NoAction, map: "directus_settings_storage_default_folder_foreign")
}

model directus_shares {
  id                   String               @id @db.Uuid
  name                 String?              @db.VarChar(255)
  collection           String               @db.VarChar(64)
  item                 String               @db.VarChar(255)
  role                 String?              @db.Uuid
  password             String?              @db.VarChar(255)
  user_created         String?              @db.Uuid
  date_created         DateTime?            @default(now()) @db.Timestamptz(6)
  date_start           DateTime?            @db.Timestamptz(6)
  date_end             DateTime?            @db.Timestamptz(6)
  times_used           Int?                 @default(0)
  max_uses             Int?
  directus_sessions    directus_sessions[]
  directus_collections directus_collections @relation(fields: [collection], references: [collection], onDelete: Cascade, onUpdate: NoAction, map: "directus_shares_collection_foreign")
  directus_roles       directus_roles?      @relation(fields: [role], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "directus_shares_role_foreign")
  directus_users       directus_users?      @relation(fields: [user_created], references: [id], onUpdate: NoAction, map: "directus_shares_user_created_foreign")
}

model directus_translations {
  id       String @id @db.Uuid
  language String @db.VarChar(255)
  key      String @db.VarChar(255)
  value    String
}

model directus_users {
  id                                                                                                                 String                                       @id @db.Uuid
  first_name                                                                                                         String?                                      @db.VarChar(50)
  last_name                                                                                                          String?                                      @db.VarChar(50)
  email                                                                                                              String?                                      @unique(map: "directus_users_email_unique") @db.VarChar(128)
  password                                                                                                           String?                                      @db.VarChar(255)
  location                                                                                                           String?                                      @db.VarChar(255)
  title                                                                                                              String?                                      @db.VarChar(50)
  description                                                                                                        String?
  tags                                                                                                               Json?                                        @db.Json
  avatar                                                                                                             String?                                      @db.Uuid
  language                                                                                                           String?                                      @db.VarChar(255)
  tfa_secret                                                                                                         String?                                      @db.VarChar(255)
  status                                                                                                             String                                       @default("active") @db.VarChar(16)
  role                                                                                                               String?                                      @db.Uuid
  token                                                                                                              String?                                      @unique(map: "directus_users_token_unique") @db.VarChar(255)
  last_access                                                                                                        DateTime?                                    @db.Timestamptz(6)
  last_page                                                                                                          String?                                      @db.VarChar(255)
  provider                                                                                                           String                                       @default("default") @db.VarChar(128)
  external_identifier                                                                                                String?                                      @unique(map: "directus_users_external_identifier_unique") @db.VarChar(255)
  auth_data                                                                                                          Json?                                        @db.Json
  email_notifications                                                                                                Boolean?                                     @default(true)
  appearance                                                                                                         String?                                      @db.VarChar(255)
  theme_dark                                                                                                         String?                                      @db.VarChar(255)
  theme_light                                                                                                        String?                                      @db.VarChar(255)
  theme_light_overrides                                                                                              Json?                                        @db.Json
  theme_dark_overrides                                                                                               Json?                                        @db.Json
  templeId                                                                                                           String?                                      @db.VarChar(255)
  Bookings_dev_Bookings_dev_user_createdTodirectus_users                                                             Bookings_dev[]                               @relation("Bookings_dev_user_createdTodirectus_users")
  Bookings_dev_Bookings_dev_user_updatedTodirectus_users                                                             Bookings_dev[]                               @relation("Bookings_dev_user_updatedTodirectus_users")
  Master_payment_table_Master_payment_table_user_createdTodirectus_users                                             Master_payment_table[]                       @relation("Master_payment_table_user_createdTodirectus_users")
  Master_payment_table_Master_payment_table_user_updatedTodirectus_users                                             Master_payment_table[]                       @relation("Master_payment_table_user_updatedTodirectus_users")
  Pages_Pages_user_createdTodirectus_users                                                                           Pages[]                                      @relation("Pages_user_createdTodirectus_users")
  Pages_Pages_user_updatedTodirectus_users                                                                           Pages[]                                      @relation("Pages_user_updatedTodirectus_users")
  Temple_Onboarding_Temple_Onboarding_user_createdTodirectus_users                                                   Temple_Onboarding[]                          @relation("Temple_Onboarding_user_createdTodirectus_users")
  Temple_Onboarding_Temple_Onboarding_user_updatedTodirectus_users                                                   Temple_Onboarding[]                          @relation("Temple_Onboarding_user_updatedTodirectus_users")
  Website_CMS_Website_CMS_user_createdTodirectus_users                                                               Website_CMS[]                                @relation("Website_CMS_user_createdTodirectus_users")
  Website_CMS_Website_CMS_user_updatedTodirectus_users                                                               Website_CMS[]                                @relation("Website_CMS_user_updatedTodirectus_users")
  Whatsapp_users_dev_Whatsapp_users_dev_user_createdTodirectus_users                                                 Whatsapp_users_dev[]                         @relation("Whatsapp_users_dev_user_createdTodirectus_users")
  Whatsapp_users_dev_Whatsapp_users_dev_user_updatedTodirectus_users                                                 Whatsapp_users_dev[]                         @relation("Whatsapp_users_dev_user_updatedTodirectus_users")
  directus_access                                                                                                    directus_access[]
  directus_dashboards                                                                                                directus_dashboards[]
  directus_files_directus_files_modified_byTodirectus_users                                                          directus_files[]                             @relation("directus_files_modified_byTodirectus_users")
  directus_files_directus_files_uploaded_byTodirectus_users                                                          directus_files[]                             @relation("directus_files_uploaded_byTodirectus_users")
  directus_flows                                                                                                     directus_flows[]
  directus_notifications_directus_notifications_recipientTodirectus_users                                            directus_notifications[]                     @relation("directus_notifications_recipientTodirectus_users")
  directus_notifications_directus_notifications_senderTodirectus_users                                               directus_notifications[]                     @relation("directus_notifications_senderTodirectus_users")
  directus_operations                                                                                                directus_operations[]
  directus_panels                                                                                                    directus_panels[]
  directus_presets                                                                                                   directus_presets[]
  directus_sessions                                                                                                  directus_sessions[]
  directus_shares                                                                                                    directus_shares[]
  directus_roles                                                                                                     directus_roles?                              @relation(fields: [role], references: [id], onUpdate: NoAction, map: "directus_users_role_foreign")
  directus_versions_directus_versions_user_createdTodirectus_users                                                   directus_versions[]                          @relation("directus_versions_user_createdTodirectus_users")
  directus_versions_directus_versions_user_updatedTodirectus_users                                                   directus_versions[]                          @relation("directus_versions_user_updatedTodirectus_users")
  hero_block_hero_block_user_createdTodirectus_users                                                                 hero_block[]                                 @relation("hero_block_user_createdTodirectus_users")
  hero_block_hero_block_user_updatedTodirectus_users                                                                 hero_block[]                                 @relation("hero_block_user_updatedTodirectus_users")
  invoice_number_sequences_invoice_number_sequences_user_createdTodirectus_users                                     invoice_number_sequences[]                   @relation("invoice_number_sequences_user_createdTodirectus_users")
  invoice_number_sequences_invoice_number_sequences_user_updatedTodirectus_users                                     invoice_number_sequences[]                   @relation("invoice_number_sequences_user_updatedTodirectus_users")
  master_booked_puja_calendar_master_booked_puja_calendar_user_createdTodirectus_users                               master_booked_puja_calendar[]                @relation("master_booked_puja_calendar_user_createdTodirectus_users")
  master_booked_puja_calendar_master_booked_puja_calendar_user_updatedTodirectus_users                               master_booked_puja_calendar[]                @relation("master_booked_puja_calendar_user_updatedTodirectus_users")
  master_booked_puja_list_master_booked_puja_list_user_createdTodirectus_users                                       master_booked_puja_list[]                    @relation("master_booked_puja_list_user_createdTodirectus_users")
  master_booked_puja_list_master_booked_puja_list_user_updatedTodirectus_users                                       master_booked_puja_list[]                    @relation("master_booked_puja_list_user_updatedTodirectus_users")
  master_booking_confirmed_puja_participants_master_booking_confirmed_puja_participants_user_updatedTodirectus_users master_booking_confirmed_puja_participants[] @relation("master_booking_confirmed_puja_participants_user_updatedTodirectus_users")
  master_booking_confirmed_puja_participants_master_booking_confirmed_puja_participants_user_createdTodirectus_users master_booking_confirmed_puja_participants[] @relation("master_booking_confirmed_puja_participants_user_createdTodirectus_users")
  master_convenience_fee_table_master_convenience_fee_table_user_createdTodirectus_users                             master_convenience_fee_table[]               @relation("master_convenience_fee_table_user_createdTodirectus_users")
  master_convenience_fee_table_master_convenience_fee_table_user_updatedTodirectus_users                             master_convenience_fee_table[]               @relation("master_convenience_fee_table_user_updatedTodirectus_users")
  master_invoice_list_master_invoice_list_user_createdTodirectus_users                                               master_invoice_list[]                        @relation("master_invoice_list_user_createdTodirectus_users")
  master_invoice_list_master_invoice_list_user_updatedTodirectus_users                                               master_invoice_list[]                        @relation("master_invoice_list_user_updatedTodirectus_users")
  master_puja_list_master_puja_list_user_createdTodirectus_users                                                     master_puja_list[]                           @relation("master_puja_list_user_createdTodirectus_users")
  master_puja_list_master_puja_list_user_updatedTodirectus_users                                                     master_puja_list[]                           @relation("master_puja_list_user_updatedTodirectus_users")
  master_puja_prasad_delivery_details_master_puja_prasad_delivery_details_user_createdTodirectus_users               master_puja_prasad_delivery_details[]        @relation("master_puja_prasad_delivery_details_user_createdTodirectus_users")
  master_puja_prasad_delivery_details_master_puja_prasad_delivery_details_user_updatedTodirectus_users               master_puja_prasad_delivery_details[]        @relation("master_puja_prasad_delivery_details_user_updatedTodirectus_users")
  master_reserved_puja_list_master_reserved_puja_list_user_createdTodirectus_users                                   master_reserved_puja_list[]                  @relation("master_reserved_puja_list_user_createdTodirectus_users")
  master_reserved_puja_list_master_reserved_puja_list_user_updatedTodirectus_users                                   master_reserved_puja_list[]                  @relation("master_reserved_puja_list_user_updatedTodirectus_users")
  master_staff_action_log_master_staff_action_log_user_createdTodirectus_users                                       master_staff_action_log[]                    @relation("master_staff_action_log_user_createdTodirectus_users")
  master_staff_action_log_master_staff_action_log_user_updatedTodirectus_users                                       master_staff_action_log[]                    @relation("master_staff_action_log_user_updatedTodirectus_users")
  master_subscription_details_master_subscription_details_user_createdTodirectus_users                               master_subscription_details[]                @relation("master_subscription_details_user_createdTodirectus_users")
  master_subscription_details_master_subscription_details_user_updatedTodirectus_users                               master_subscription_details[]                @relation("master_subscription_details_user_updatedTodirectus_users")
  master_temple_staff_list_master_temple_staff_list_user_createdTodirectus_users                                     master_temple_staff_list[]                   @relation("master_temple_staff_list_user_createdTodirectus_users")
  master_temple_staff_list_master_temple_staff_list_user_updatedTodirectus_users                                     master_temple_staff_list[]                   @relation("master_temple_staff_list_user_updatedTodirectus_users")
  partner_blocks_partner_blocks_user_createdTodirectus_users                                                         partner_blocks[]                             @relation("partner_blocks_user_createdTodirectus_users")
  partner_blocks_partner_blocks_user_updatedTodirectus_users                                                         partner_blocks[]                             @relation("partner_blocks_user_updatedTodirectus_users")
  puja_description_puja_description_user_createdTodirectus_users                                                     puja_description[]                           @relation("puja_description_user_createdTodirectus_users")
  puja_description_puja_description_user_updatedTodirectus_users                                                     puja_description[]                           @relation("puja_description_user_updatedTodirectus_users")
}

model directus_versions {
  id                                                            String               @id @db.Uuid
  key                                                           String               @db.VarChar(64)
  name                                                          String?              @db.VarChar(255)
  collection                                                    String               @db.VarChar(64)
  item                                                          String               @db.VarChar(255)
  hash                                                          String?              @db.VarChar(255)
  date_created                                                  DateTime?            @default(now()) @db.Timestamptz(6)
  date_updated                                                  DateTime?            @default(now()) @db.Timestamptz(6)
  user_created                                                  String?              @db.Uuid
  user_updated                                                  String?              @db.Uuid
  directus_revisions                                            directus_revisions[]
  directus_collections                                          directus_collections @relation(fields: [collection], references: [collection], onDelete: Cascade, onUpdate: NoAction, map: "directus_versions_collection_foreign")
  directus_users_directus_versions_user_createdTodirectus_users directus_users?      @relation("directus_versions_user_createdTodirectus_users", fields: [user_created], references: [id], onUpdate: NoAction, map: "directus_versions_user_created_foreign")
  directus_users_directus_versions_user_updatedTodirectus_users directus_users?      @relation("directus_versions_user_updatedTodirectus_users", fields: [user_updated], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "directus_versions_user_updated_foreign")
}

model directus_webhooks {
  id                            Int             @id @default(autoincrement())
  name                          String          @db.VarChar(255)
  method                        String          @default("POST") @db.VarChar(10)
  url                           String          @db.VarChar(255)
  status                        String          @default("active") @db.VarChar(10)
  data                          Boolean         @default(true)
  actions                       String          @db.VarChar(100)
  collections                   String          @db.VarChar(255)
  headers                       Json?           @db.Json
  was_active_before_deprecation Boolean         @default(false)
  migrated_flow                 String?         @db.Uuid
  directus_flows                directus_flows? @relation(fields: [migrated_flow], references: [id], onUpdate: NoAction, map: "directus_webhooks_migrated_flow_foreign")
}

model hero_block {
  id                                                     Int             @id @default(autoincrement())
  status                                                 String          @default("draft") @db.VarChar(255)
  sort                                                   Int?
  user_created                                           String?         @db.Uuid
  date_created                                           DateTime?       @db.Timestamptz(6)
  user_updated                                           String?         @db.Uuid
  date_updated                                           DateTime?       @db.Timestamptz(6)
  Heading                                                String?         @db.VarChar(255)
  Sub_heading                                            String?         @db.VarChar(255)
  Bg_image_1                                             String?         @db.VarChar(255)
  bg_image_2                                             String?         @db.VarChar(255)
  star_image                                             String?         @db.VarChar(255)
  button_text_1                                          String?
  button_text_2                                          String?         @db.VarChar(255)
  directus_users_hero_block_user_createdTodirectus_users directus_users? @relation("hero_block_user_createdTodirectus_users", fields: [user_created], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "hero_block_user_created_foreign")
  directus_users_hero_block_user_updatedTodirectus_users directus_users? @relation("hero_block_user_updatedTodirectus_users", fields: [user_updated], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "hero_block_user_updated_foreign")
}

model invoice_number_sequences {
  id                                                                   String          @id @db.Uuid
  sort                                                                 Int?
  user_created                                                         String?         @db.Uuid
  date_created                                                         DateTime?       @db.Timestamptz(6)
  user_updated                                                         String?         @db.Uuid
  date_updated                                                         DateTime?       @db.Timestamptz(6)
  temple_code                                                          String?         @db.VarChar(255)
  fiscal_year                                                          String?         @db.VarChar(255)
  last_sequence_number                                                 Int?
  is_test                                                              Boolean         @default(false)
  booking_source                                                       String?         @db.VarChar(255)
  directus_users_invoice_number_sequences_user_createdTodirectus_users directus_users? @relation("invoice_number_sequences_user_createdTodirectus_users", fields: [user_created], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "invoice_number_sequences_user_created_foreign")
  directus_users_invoice_number_sequences_user_updatedTodirectus_users directus_users? @relation("invoice_number_sequences_user_updatedTodirectus_users", fields: [user_updated], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "invoice_number_sequences_user_updated_foreign")
}

model master_booked_puja_calendar {
  id                                                                      Int                      @id @default(autoincrement())
  sort                                                                    Int?
  user_created                                                            String?                  @db.Uuid
  date_created                                                            DateTime?                @db.Timestamptz(6)
  user_updated                                                            String?                  @db.Uuid
  date_updated                                                            DateTime?                @db.Timestamptz(6)
  date                                                                    DateTime?                @db.Date
  booking_id                                                              String?                  @db.Uuid
  booked_puja_id                                                          String?                  @db.Uuid
  puja_reminder_status                                                    String?                  @db.VarChar(255)
  puja_reminder_status_history                                            Json?                    @db.Json
  puja_confirmation_status                                                String?                  @db.VarChar(255)
  puja_confirmation_status_history                                        Json?                    @db.Json
  is_printed_in_report                                                    Boolean                  @default(false)
  master_booked_puja_list                                                 master_booked_puja_list? @relation(fields: [booked_puja_id], references: [id], onUpdate: NoAction, map: "master_booked_puja_calendar_booked_puja_id_foreign")
  Bookings_dev                                                            Bookings_dev?            @relation(fields: [booking_id], references: [id], onUpdate: NoAction, map: "master_booked_puja_calendar_booking_id_foreign")
  directus_users_master_booked_puja_calendar_user_createdTodirectus_users directus_users?          @relation("master_booked_puja_calendar_user_createdTodirectus_users", fields: [user_created], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "master_booked_puja_calendar_user_created_foreign")
  directus_users_master_booked_puja_calendar_user_updatedTodirectus_users directus_users?          @relation("master_booked_puja_calendar_user_updatedTodirectus_users", fields: [user_updated], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "master_booked_puja_calendar_user_updated_foreign")
}

model master_booked_puja_list {
  id                                                                  String                                      @id @db.Uuid
  status                                                              String                                      @default("draft") @db.VarChar(255)
  sort                                                                Int?
  user_created                                                        String?                                     @db.Uuid
  date_created                                                        DateTime?                                   @db.Timestamptz(6)
  user_updated                                                        String?                                     @db.Uuid
  date_updated                                                        DateTime?                                   @db.Timestamptz(6)
  puja_date                                                           DateTime?                                   @db.Date
  puja_amount                                                         Int?
  booking_id                                                          String?                                     @db.Uuid
  booked_participant_id                                               String?                                     @db.Uuid
  is_repeat_puja                                                      Boolean?                                    @default(false)
  puja_repeat_frequency                                               String?                                     @db.VarChar(255)
  puja_repeat_count                                                   String?                                     @db.VarChar(255)
  puja_weekly_repeat_day                                              String?                                     @db.VarChar(255)
  puja_end_date                                                       DateTime?                                   @db.Date
  other_repeat_types                                                  String?                                     @db.VarChar(255)
  nakshatraDates                                                      Json?                                       @db.Json
  puja_quantity                                                       Int?
  puja_remarks                                                        String?                                     @db.VarChar(255)
  notification_opened                                                 Boolean?                                    @default(false)
  master_booked_puja_calendar                                         master_booked_puja_calendar[]
  master_booking_confirmed_puja_participants                          master_booking_confirmed_puja_participants? @relation(fields: [booked_participant_id], references: [id], onUpdate: NoAction, map: "master_booked_puja_list_booked_participant_id_foreign")
  Bookings_dev                                                        Bookings_dev?                               @relation(fields: [booking_id], references: [id], onUpdate: NoAction, map: "master_booked_puja_list_booking_id_foreign")
  directus_users_master_booked_puja_list_user_createdTodirectus_users directus_users?                             @relation("master_booked_puja_list_user_createdTodirectus_users", fields: [user_created], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "master_booked_puja_list_user_created_foreign")
  directus_users_master_booked_puja_list_user_updatedTodirectus_users directus_users?                             @relation("master_booked_puja_list_user_updatedTodirectus_users", fields: [user_updated], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "master_booked_puja_list_user_updated_foreign")
  master_booked_puja_list_master_puja_list                            master_booked_puja_list_master_puja_list[]
}

model master_booked_puja_list_master_puja_list {
  id                         Int                      @id @default(autoincrement())
  master_booked_puja_list_id String?                  @db.Uuid
  master_puja_list_id        String?                  @db.Uuid
  master_puja_list           master_puja_list?        @relation(fields: [master_puja_list_id], references: [id], onUpdate: NoAction, map: "master_booked_puja_list_master_puja_list_m__3694eeb8_foreign")
  master_booked_puja_list    master_booked_puja_list? @relation(fields: [master_booked_puja_list_id], references: [id], onUpdate: NoAction, map: "master_booked_puja_list_master_puja_list_m__704fab6b_foreign")
}

model master_booking_confirmed_puja_participants {
  id                                                                                     String                      @id @db.Uuid
  status                                                                                 String                      @default("draft") @db.VarChar(255)
  sort                                                                                   Int?
  user_created                                                                           String?                     @db.Uuid
  date_created                                                                           DateTime?                   @db.Timestamptz(6)
  user_updated                                                                           String?                     @db.Uuid
  date_updated                                                                           DateTime?                   @db.Timestamptz(6)
  participant_nakshatra                                                                  String?                     @db.VarChar(255)
  participant_name                                                                       String?                     @db.VarChar(255)
  booking_id                                                                             String?                     @db.Uuid
  participant_DOB                                                                        String?                     @db.VarChar(255)
  participant_birth_time                                                                 String?                     @db.VarChar(255)
  master_booked_puja_list                                                                master_booked_puja_list[]
  directus_users_master_booking_confirmed_puja_participants_user_updatedTodirectus_users directus_users?             @relation("master_booking_confirmed_puja_participants_user_updatedTodirectus_users", fields: [user_updated], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "master_booking_confirmed_puja_participants__2ea1d225_foreign")
  directus_users_master_booking_confirmed_puja_participants_user_createdTodirectus_users directus_users?             @relation("master_booking_confirmed_puja_participants_user_createdTodirectus_users", fields: [user_created], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "master_booking_confirmed_puja_participants__322f4f08_foreign")
  Bookings_dev                                                                           Bookings_dev?               @relation(fields: [booking_id], references: [id], onUpdate: NoAction, map: "master_booking_confirmed_puja_participants__5a5451eb_foreign")
  master_reserved_puja_list                                                              master_reserved_puja_list[]
}

model master_convenience_fee_table {
  id                                                                       Int                   @id @default(autoincrement())
  sort                                                                     Int?
  user_created                                                             String?               @db.Uuid
  date_created                                                             DateTime?             @db.Timestamptz(6)
  user_updated                                                             String?               @db.Uuid
  date_updated                                                             DateTime?             @db.Timestamptz(6)
  booking_id                                                               String?               @unique(map: "master_convenience_fee_table_booking_id_unique") @db.Uuid
  payment_id                                                               String?               @db.VarChar(255)
  payment_gateway_GST                                                      String?               @db.VarChar(255)
  payment_gateway_charge                                                   String?               @db.VarChar(255)
  payment_table_id                                                         String?               @unique(map: "master_convenience_fee_table_payment_table_id_unique") @db.Uuid
  platform_fee                                                             String?               @db.VarChar(255)
  platform_fee_GST                                                         String?               @db.VarChar(255)
  Bookings_dev                                                             Bookings_dev?         @relation(fields: [booking_id], references: [id], onUpdate: NoAction, map: "master_convenience_fee_table_booking_id_foreign")
  Master_payment_table                                                     Master_payment_table? @relation(fields: [payment_table_id], references: [id], onUpdate: NoAction, map: "master_convenience_fee_table_payment_table_id_foreign")
  directus_users_master_convenience_fee_table_user_createdTodirectus_users directus_users?       @relation("master_convenience_fee_table_user_createdTodirectus_users", fields: [user_created], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "master_convenience_fee_table_user_created_foreign")
  directus_users_master_convenience_fee_table_user_updatedTodirectus_users directus_users?       @relation("master_convenience_fee_table_user_updatedTodirectus_users", fields: [user_updated], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "master_convenience_fee_table_user_updated_foreign")
}

model master_invoice_list {
  id                                                              String          @id @db.Uuid
  status                                                          String          @default("draft") @db.VarChar(255)
  sort                                                            Int?
  user_created                                                    String?         @db.Uuid
  date_created                                                    DateTime?       @db.Timestamptz(6)
  user_updated                                                    String?         @db.Uuid
  date_updated                                                    DateTime?       @db.Timestamptz(6)
  invoice_id                                                      Int?
  invoice_date                                                    DateTime?       @db.Date
  booking_id                                                      String?         @unique(map: "master_invoice_list_booking_id_unique") @db.Uuid
  invoice_link                                                    String?         @db.VarChar(255)
  Bookings_dev                                                    Bookings_dev?   @relation(fields: [booking_id], references: [id], onUpdate: NoAction, map: "master_invoice_list_booking_id_foreign")
  directus_users_master_invoice_list_user_createdTodirectus_users directus_users? @relation("master_invoice_list_user_createdTodirectus_users", fields: [user_created], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "master_invoice_list_user_created_foreign")
  directus_users_master_invoice_list_user_updatedTodirectus_users directus_users? @relation("master_invoice_list_user_updatedTodirectus_users", fields: [user_updated], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "master_invoice_list_user_updated_foreign")
}

model master_puja_list {
  id                                                                   String                                     @id @db.Uuid
  status                                                               String                                     @default("Active") @db.VarChar(255)
  sort                                                                 Int?
  user_created                                                         String?                                    @db.Uuid
  date_created                                                         DateTime?                                  @db.Timestamptz(6)
  user_updated                                                         String?                                    @db.Uuid
  date_updated                                                         DateTime?                                  @db.Timestamptz(6)
  puja_name                                                            String?                                    @db.VarChar(255)
  puja_price                                                           Int?
  puja_time                                                            DateTime?                                  @db.Time(6)
  is_puja_repeat                                                       Boolean                                    @default(false)
  puja_repeat_frequency                                                Json?                                      @db.Json
  is_puja_quantity_required                                            Boolean                                    @default(false)
  puja_quantity                                                        Int?
  is_nivedya_prasadam_available                                        Boolean                                    @default(false)
  prasadam_details                                                     Json?                                      @db.Json
  prasadam_collection_time                                             DateTime?                                  @db.Time(6)
  puja_price_with_GST                                                  Int?
  certain_months                                                       Json?                                      @db.Json
  puja_description                                                     String?                                    @db.Uuid
  is_reserved_puja                                                     Boolean?                                   @default(false)
  certain_weeks                                                        Json?                                      @db.Json
  Which_Days                                                           Json?                                      @db.Json
  festivals                                                            Json?                                      @db.Json
  prasad_coupon_number                                                 String?                                    @db.VarChar(255)
  prasad_coupon_link                                                   String?                                    @db.VarChar(255)
  is_donation                                                          Boolean                                    @default(false)
  donation_category                                                    String?                                    @db.VarChar(255)
  donation_amount                                                      Json?                                      @db.Json
  temple_name                                                          String?                                    @db.Uuid
  is_subpuja                                                           Boolean?
  parent_puja                                                          String?                                    @db.Uuid
  display_order                                                        String?                                    @db.VarChar(255)
  puja_deity                                                           String?                                    @db.VarChar(255)
  approval_from_temple_required                                        Boolean?
  approval_number                                                      String?                                    @db.VarChar(255)
  puja_image                                                           String?                                    @db.Uuid
  image_cdn_link                                                       String?                                    @db.VarChar(255)
  custom_structure                                                     Json?                                      @db.Json
  puja_availability                                                    Json?                                      @db.Json
  master_booked_puja_list_master_puja_list                             master_booked_puja_list_master_puja_list[]
  master_puja_list                                                     master_puja_list?                          @relation("master_puja_listTomaster_puja_list", fields: [parent_puja], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "master_puja_list_parent_puja_foreign")
  other_master_puja_list                                               master_puja_list[]                         @relation("master_puja_listTomaster_puja_list")
  puja_description_master_puja_list_puja_descriptionTopuja_description puja_description?                          @relation("master_puja_list_puja_descriptionTopuja_description", fields: [puja_description], references: [id], onUpdate: NoAction, map: "master_puja_list_puja_description_foreign")
  directus_files                                                       directus_files?                            @relation(fields: [puja_image], references: [id], onUpdate: NoAction, map: "master_puja_list_puja_image_foreign")
  Temple_Onboarding                                                    Temple_Onboarding?                         @relation(fields: [temple_name], references: [id], onUpdate: NoAction, map: "master_puja_list_temple_name_foreign")
  directus_users_master_puja_list_user_createdTodirectus_users         directus_users?                            @relation("master_puja_list_user_createdTodirectus_users", fields: [user_created], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "master_puja_list_user_created_foreign")
  directus_users_master_puja_list_user_updatedTodirectus_users         directus_users?                            @relation("master_puja_list_user_updatedTodirectus_users", fields: [user_updated], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "master_puja_list_user_updated_foreign")
  master_reserved_puja_list                                            master_reserved_puja_list[]
}

model master_puja_prasad_delivery_details {
  id                                                                              String          @id @db.Uuid
  status                                                                          String          @default("draft") @db.VarChar(255)
  sort                                                                            Int?
  user_created                                                                    String?         @db.Uuid
  date_created                                                                    DateTime?       @db.Timestamptz(6)
  user_updated                                                                    String?         @db.Uuid
  date_updated                                                                    DateTime?       @db.Timestamptz(6)
  booking_id                                                                      String?         @unique(map: "master_puja_prasad_delivery_details_booking_id_unique") @db.Uuid
  delivery_address                                                                String?
  prasad_delivery_mode                                                            String?         @db.VarChar(255)
  Bookings_dev                                                                    Bookings_dev?   @relation(fields: [booking_id], references: [id], onUpdate: NoAction, map: "master_puja_prasad_delivery_details_booking_id_foreign")
  directus_users_master_puja_prasad_delivery_details_user_createdTodirectus_users directus_users? @relation("master_puja_prasad_delivery_details_user_createdTodirectus_users", fields: [user_created], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "master_puja_prasad_delivery_details_user_created_foreign")
  directus_users_master_puja_prasad_delivery_details_user_updatedTodirectus_users directus_users? @relation("master_puja_prasad_delivery_details_user_updatedTodirectus_users", fields: [user_updated], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "master_puja_prasad_delivery_details_user_updated_foreign")
}

model master_reserved_puja_list {
  id                                                                    String                                      @id @db.Uuid
  status                                                                String                                      @default("draft") @db.VarChar(255)
  sort                                                                  Int?
  user_created                                                          String?                                     @db.Uuid
  date_created                                                          DateTime?                                   @db.Timestamptz(6)
  user_updated                                                          String?                                     @db.Uuid
  date_updated                                                          DateTime?                                   @db.Timestamptz(6)
  reserved_puja_id                                                      String?                                     @db.Uuid
  booking_id                                                            String?                                     @db.Uuid
  participant_id                                                        String?                                     @db.Uuid
  mobile_number                                                         BigInt?
  payment_mode                                                          String?                                     @db.VarChar(255)
  payment_status                                                        String?                                     @db.VarChar(255)
  upid                                                                  String?                                     @db.VarChar(255)
  onboarded_temple_id                                                   String?                                     @db.Uuid
  Bookings_dev                                                          Bookings_dev?                               @relation(fields: [booking_id], references: [id], onUpdate: NoAction, map: "master_reserved_puja_list_booking_id_foreign")
  Temple_Onboarding                                                     Temple_Onboarding?                          @relation(fields: [onboarded_temple_id], references: [id], onUpdate: NoAction, map: "master_reserved_puja_list_onboarded_temple_id_foreign")
  master_booking_confirmed_puja_participants                            master_booking_confirmed_puja_participants? @relation(fields: [participant_id], references: [id], onUpdate: NoAction, map: "master_reserved_puja_list_participant_id_foreign")
  master_puja_list                                                      master_puja_list?                           @relation(fields: [reserved_puja_id], references: [id], onUpdate: NoAction, map: "master_reserved_puja_list_reserved_puja_id_foreign")
  directus_users_master_reserved_puja_list_user_createdTodirectus_users directus_users?                             @relation("master_reserved_puja_list_user_createdTodirectus_users", fields: [user_created], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "master_reserved_puja_list_user_created_foreign")
  directus_users_master_reserved_puja_list_user_updatedTodirectus_users directus_users?                             @relation("master_reserved_puja_list_user_updatedTodirectus_users", fields: [user_updated], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "master_reserved_puja_list_user_updated_foreign")
}

model master_staff_action_log {
  id                                                                  String                    @id @db.Uuid
  status                                                              String                    @default("draft") @db.VarChar(255)
  sort                                                                Int?
  user_created                                                        String?                   @db.Uuid
  date_created                                                        DateTime?                 @db.Timestamptz(6)
  user_updated                                                        String?                   @db.Uuid
  date_updated                                                        DateTime?                 @db.Timestamptz(6)
  satff_id                                                            String?                   @db.Uuid
  action                                                              String?                   @db.VarChar(255)
  time_stamp                                                          DateTime?                 @db.Timestamp(6)
  meta_data                                                           Json?                     @db.Json
  entity_id_                                                          String?                   @db.Uuid
  master_temple_staff_list                                            master_temple_staff_list? @relation(fields: [satff_id], references: [id], onUpdate: NoAction, map: "master_staff_action_log_satff_id_foreign")
  directus_users_master_staff_action_log_user_createdTodirectus_users directus_users?           @relation("master_staff_action_log_user_createdTodirectus_users", fields: [user_created], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "master_staff_action_log_user_created_foreign")
  directus_users_master_staff_action_log_user_updatedTodirectus_users directus_users?           @relation("master_staff_action_log_user_updatedTodirectus_users", fields: [user_updated], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "master_staff_action_log_user_updated_foreign")
}

model master_subscription_details {
  id                                                                      Int                @id @default(autoincrement())
  status                                                                  String             @default("draft") @db.VarChar(255)
  sort                                                                    Int?
  user_created                                                            String?            @db.Uuid
  date_created                                                            DateTime?          @db.Timestamptz(6)
  user_updated                                                            String?            @db.Uuid
  date_updated                                                            DateTime?          @db.Timestamptz(6)
  subscription_amount                                                     String?            @db.VarChar(255)
  starting_date                                                           DateTime?          @db.Timestamp(6)
  expiry_date                                                             DateTime?          @db.Timestamp(6)
  billing_date                                                            DateTime?          @db.Timestamp(6)
  renewal_date                                                            DateTime?          @db.Timestamp(6)
  invoice_link                                                            String?            @db.VarChar(255)
  is_invoice_sent                                                         Boolean?
  subscription_history                                                    String?
  payment_method                                                          String?            @db.VarChar(255)
  temple_id                                                               String?            @unique(map: "master_subscription_details_temple_id_unique") @db.Uuid
  Temple_Onboarding                                                       Temple_Onboarding? @relation(fields: [temple_id], references: [id], onUpdate: NoAction, map: "master_subscription_details_temple_id_foreign")
  directus_users_master_subscription_details_user_createdTodirectus_users directus_users?    @relation("master_subscription_details_user_createdTodirectus_users", fields: [user_created], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "master_subscription_details_user_created_foreign")
  directus_users_master_subscription_details_user_updatedTodirectus_users directus_users?    @relation("master_subscription_details_user_updatedTodirectus_users", fields: [user_updated], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "master_subscription_details_user_updated_foreign")
}

model master_temple_staff_list {
  id                                                                   String                                       @id @db.Uuid
  status                                                               String                                       @default("draft") @db.VarChar(255)
  sort                                                                 Int?
  user_created                                                         String?                                      @db.Uuid
  date_created                                                         DateTime?                                    @db.Timestamptz(6)
  user_updated                                                         String?                                      @db.Uuid
  date_updated                                                         DateTime?                                    @db.Timestamptz(6)
  staff_name                                                           String?                                      @db.VarChar(255)
  staff_role                                                           String                                       @db.VarChar(255)
  email_id                                                             String?                                      @unique(map: "master_temple_staff_list_email_id_unique") @db.VarChar(255)
  mobile_number                                                        BigInt?
  password                                                             String?                                      @db.VarChar(255)
  staff_status                                                         String?                                      @db.VarChar(255)
  last_login                                                           DateTime?                                    @db.Timestamp(6)
  whatsapp_number                                                      String?                                      @db.VarChar(255)
  last_whatsapp_token                                                  String?                                      @default("rRx4DHaX2biAZ6+OXnZs2w==") @db.VarChar(255)
  allowed_actions                                                      Json?                                        @db.Json
  master_staff_action_log                                              master_staff_action_log[]
  directus_users_master_temple_staff_list_user_createdTodirectus_users directus_users?                              @relation("master_temple_staff_list_user_createdTodirectus_users", fields: [user_created], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "master_temple_staff_list_user_created_foreign")
  directus_users_master_temple_staff_list_user_updatedTodirectus_users directus_users?                              @relation("master_temple_staff_list_user_updatedTodirectus_users", fields: [user_updated], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "master_temple_staff_list_user_updated_foreign")
  master_temple_staff_list_Bookings_dev                                master_temple_staff_list_Bookings_dev[]
  master_temple_staff_list_Bookings_dev_1                              master_temple_staff_list_Bookings_dev_1[]
  master_temple_staff_list_Temple_Onboarding                           master_temple_staff_list_Temple_Onboarding[]
}

model master_temple_staff_list_Bookings_dev {
  id                          Int                       @id @default(autoincrement())
  master_temple_staff_list_id String?                   @db.Uuid
  Bookings_dev_id             String?                   @db.Uuid
  Bookings_dev                Bookings_dev?             @relation(fields: [Bookings_dev_id], references: [id], onUpdate: NoAction, map: "master_temple_staff_list_bookings_dev_book__22edab03_foreign")
  master_temple_staff_list    master_temple_staff_list? @relation(fields: [master_temple_staff_list_id], references: [id], onUpdate: NoAction, map: "master_temple_staff_list_bookings_dev_mast__1d2320e5_foreign")
}

model master_temple_staff_list_Bookings_dev_1 {
  id                          Int                       @id @default(autoincrement())
  master_temple_staff_list_id String?                   @db.Uuid
  Bookings_dev_id             String?                   @db.Uuid
  Bookings_dev                Bookings_dev?             @relation(fields: [Bookings_dev_id], references: [id], onUpdate: NoAction, map: "master_temple_staff_list_bookings_dev_1_bo__2f044091_foreign")
  master_temple_staff_list    master_temple_staff_list? @relation(fields: [master_temple_staff_list_id], references: [id], onUpdate: NoAction, map: "master_temple_staff_list_bookings_dev_1_ma__47afd173_foreign")
}

model master_temple_staff_list_Temple_Onboarding {
  id                          Int                       @id @default(autoincrement())
  master_temple_staff_list_id String?                   @db.Uuid
  Temple_Onboarding_id        String?                   @db.Uuid
  Temple_Onboarding           Temple_Onboarding?        @relation(fields: [Temple_Onboarding_id], references: [id], onUpdate: NoAction, map: "master_temple_staff_list_temple_onboarding__493b7bbf_foreign")
  master_temple_staff_list    master_temple_staff_list? @relation(fields: [master_temple_staff_list_id], references: [id], onUpdate: NoAction, map: "master_temple_staff_list_temple_onboarding__7c1e0a62_foreign")
}

model payment_gateways {
  id        String   @id @db.Uuid
  name      String?  @db.VarChar(255)
  isDefault Boolean? @default(false)
  isActive  Boolean? @default(true)
}

model platform_fee_bands {
  id         String   @id @db.Uuid
  min_amount Decimal? @db.Decimal(10, 5)
  max_amount Decimal? @db.Decimal(10, 5)
  fee_amount Decimal? @db.Decimal(10, 5)
}

model promocode {
  id              String    @id @db.Uuid
  status          String    @default("draft") @db.VarChar(255)
  date_created    DateTime? @db.Timestamptz(6)
  code            String?   @db.VarChar(255)
  discount_type   String?   @db.VarChar(255)
  discount_value  Int?
  min_order_value Int?
  max_discount    Int?
  valid_from      DateTime? @db.Timestamp(6)
  valid_until     DateTime? @db.Timestamp(6)
  usage_limit     Int?      @default(1)
  current_usage   Int?
}

model puja_description {
  id                                                                   String             @id @db.Uuid
  user_created                                                         String?            @db.Uuid
  date_created                                                         DateTime?          @db.Timestamptz(6)
  user_updated                                                         String?            @db.Uuid
  date_updated                                                         DateTime?          @db.Timestamptz(6)
  Puja_name_english                                                    String?            @db.VarChar(255)
  Puja_benefits_english                                                String?
  Puja_name_malayalam                                                  String?            @db.VarChar(255)
  Puja_benefits_malayalam                                              String?
  Puja_name_tamil                                                      String?            @db.VarChar(255)
  Puja_benefits_tamil                                                  String?
  master_puja_list_master_puja_list_puja_descriptionTopuja_description master_puja_list[] @relation("master_puja_list_puja_descriptionTopuja_description")
  directus_users_puja_description_user_createdTodirectus_users         directus_users?    @relation("puja_description_user_createdTodirectus_users", fields: [user_created], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "puja_description_user_created_foreign")
  directus_users_puja_description_user_updatedTodirectus_users         directus_users?    @relation("puja_description_user_updatedTodirectus_users", fields: [user_updated], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "puja_description_user_updated_foreign")
}

model user_feedbacks {
  id                 String              @id @db.Uuid
  sort               Int?
  date_created       DateTime?           @db.Timestamptz(6)
  rating             Int?
  would_recommend    Boolean?
  comment            String?             @db.VarChar(255)
  feedback_type      String?             @db.VarChar(255)
  user_id            String?             @db.Uuid
  booking_id         String?             @db.Uuid
  Bookings_dev       Bookings_dev?       @relation(fields: [booking_id], references: [id], onUpdate: NoAction, map: "user_feedbacks_booking_id_foreign")
  Whatsapp_users_dev Whatsapp_users_dev? @relation(fields: [user_id], references: [id], onUpdate: NoAction, map: "user_feedbacks_user_id_foreign")
}

model partner_blocks {
  id                                                         Int                         @id @default(autoincrement())
  status                                                     String                      @default("draft") @db.VarChar(255)
  sort                                                       Int?
  user_created                                               String?                     @db.Uuid
  date_created                                               DateTime?                   @db.Timestamptz(6)
  user_updated                                               String?                     @db.Uuid
  date_updated                                               DateTime?                   @db.Timestamptz(6)
  title                                                      String?                     @db.VarChar(255)
  sub_title                                                  String?                     @db.VarChar(255)
  discription                                                String?                     @db.VarChar(255)
  directus_users_partner_blocks_user_createdTodirectus_users directus_users?             @relation("partner_blocks_user_createdTodirectus_users", fields: [user_created], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "partner_blocks_user_created_foreign")
  directus_users_partner_blocks_user_updatedTodirectus_users directus_users?             @relation("partner_blocks_user_updatedTodirectus_users", fields: [user_updated], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "partner_blocks_user_updated_foreign")
  partner_blocks_cards                                       partner_blocks_cards[]
  partner_blocks_text_field                                  partner_blocks_text_field[]
}

model Pages_blocks {
  id         Int     @id @default(autoincrement())
  Pages_id   Int?
  item       String? @db.VarChar(255)
  collection String? @db.VarChar(255)
  Pages      Pages?  @relation(fields: [Pages_id], references: [id], onUpdate: NoAction, map: "pages_blocks_pages_id_foreign")
}

model partner_blocks_text_field {
  id                Int             @id @default(autoincrement())
  partner_blocks_id Int?
  text_field_id     String?         @db.Uuid
  partner_blocks    partner_blocks? @relation(fields: [partner_blocks_id], references: [id], onUpdate: NoAction, map: "partner_blocks_text_field_partner_blocks_id_foreign")
  text_field        text_field?     @relation(fields: [text_field_id], references: [id], onUpdate: NoAction, map: "partner_blocks_text_field_text_field_id_foreign")
}

model text_field {
  id                        String                      @id @db.Uuid
  text_field                String?                     @db.VarChar(255)
  label                     String?                     @db.VarChar(255)
  partner_blocks_text_field partner_blocks_text_field[]
}

model cards {
  id                   String                 @id @db.Uuid
  card_images          String?                @db.VarChar(255)
  card_title           String?                @db.VarChar(255)
  card_discription     String?                @db.VarChar(255)
  class                String?                @db.VarChar(255)
  position             String?                @db.VarChar(255)
  partner_blocks_cards partner_blocks_cards[]
}

model partner_blocks_cards {
  id                Int             @id @default(autoincrement())
  partner_blocks_id Int?
  cards_id          String?         @db.Uuid
  cards             cards?          @relation(fields: [cards_id], references: [id], onUpdate: NoAction, map: "partner_blocks_cards_cards_id_foreign")
  partner_blocks    partner_blocks? @relation(fields: [partner_blocks_id], references: [id], onUpdate: NoAction, map: "partner_blocks_cards_partner_blocks_id_foreign")
}

model info_blocks {
  id          Int     @id @default(autoincrement())
  title       String? @db.VarChar(255)
  image       String? @db.VarChar(255)
  discription String?
}

model booking_steps_blocks {
  id           Int     @id @default(autoincrement())
  title        String? @db.VarChar(255)
  description  String? @db.VarChar(255)
  steps        Json?   @db.Json
  images       Json?   @db.Json
  button_label String? @db.VarChar(255)
}

model testimonials_blocks {
  id                                        Int                                         @id @default(autoincrement())
  title                                     String?                                     @db.VarChar(255)
  description                               String?
  suscribing_title                          String?                                     @db.VarChar(255)
  suscribing_bg_image                       String?                                     @db.VarChar(255)
  testimonials_blocks_testimonials_carousel testimonials_blocks_testimonials_carousel[]
}

model testimonials_blocks_testimonials_carousel {
  id                       Int                    @id @default(autoincrement())
  testimonials_blocks_id   Int?
  testimonials_carousel_id Int?
  testimonials_carousel    testimonials_carousel? @relation(fields: [testimonials_carousel_id], references: [id], onUpdate: NoAction, map: "testimonials_blocks_testimonials_carousel___7cb2e0a6_foreign")
  testimonials_blocks      testimonials_blocks?   @relation(fields: [testimonials_blocks_id], references: [id], onUpdate: NoAction, map: "testimonials_blocks_testimonials_carousel___7fe83d80_foreign")
}

model testimonials_carousel {
  id                                        Int                                         @id @default(autoincrement())
  testimonial_name                          String?                                     @db.VarChar(255)
  testimonial_description                   String?
  testimonial_image                         String?                                     @db.VarChar(255)
  testimonial_starts                        Int?
  testimonials_blocks_testimonials_carousel testimonials_blocks_testimonials_carousel[]
}
